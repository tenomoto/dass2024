---
title: Fortran
---
このディレクトリには、FortranのソースコードとRによる描画スクリプトが格納されている。
コンパイルにはmakeを用いる。

```zsh
% make
```

倍精度のパラメタには、組込の`iso_fortran_env`から`real64`を`dp`として利用した。PythonやRとの互換性を考慮して、入出力には`access="stream"`を用いた。

描画するためのRスクリプトをターミナルから実行するには、`Rscript`コマンドを用いる。たとえば`run_l63_var`の実行後、結果を描くには次のようにする。`l63_var.png`ができる。
```powershell
> Rscript plot_l63_var.R
```
Rを起動して`source()`を使ってもよい。
```r
> source("plot_l63_var.R")
```
Rは探索的データ解析のための道具であるので、Rのコンソール上で対話的に分析を行うほうがむしろ普通である。

## 共通モジュール

- `random_module.f90`: 乱数モジュール
    * `random_set_seed`: スカラ整数与えて乱数の種を設定する。
    * `random_uniform`: $0 < X <= 1$の一様乱数を$n$個生成する。
    * `random_normal`: @Box-Muller:1958 法により正規分布に従う$n$個の乱数を生成する。オプションで平均と標準偏差を与えることもできる。
- `rk4_module.f90`: 4次のRunge-Kutta法（RK4）
　　* `rk4`による時間積分。時間変化傾向を返す函数`f`、時刻`t`、1次元配列に格納した変数`y`、時間刻み幅`h`のほかに、`f`に渡すパラメタを1次元配列`opts`に格納して渡すことができる。
　　* `rk4_tl`: RK4の接線型。`f`の接線型`df`と接線型変数`dy`も渡す。
　　* `rk4_ad`: RK4の随伴。`f`の随伴`fa`と接線型変数`ya`も渡す。
- `step_module.f90`: RK4による時間積分
    * `step_fom`: 前方モデル`f`で`nstep`積分する。
    * `step_tlm`: 前方モデル`f`と接線型モデル`df`で`nstep`積分する。
    * `step_adm`: 前方モデル`f`と随伴モデル`fa`で`nstep`から1まで逆向きに積分する。
- `test.f90`: `random_module, l63_module, l96_module`をテストするサブルーチンを呼び出す。

## アンサンブルカルマンフィルタのモジュール

- `enkf_module.f90`: `enkf_analysis`で一つの観測を同化して、インクリメントを返す。結合状態・観測空間の第一推定値`zf`、摂動を付与した観測`yo`をそれぞれ1次元配列で与える。観測誤差分散`r`はスカラ、予報共分散に対する局所化及びインフレーションを1次元配列で与える。
- `eakf_module.f90`: `eakf_analysis`で一つの観測を同化して、インクリメントを返す。結合状態・観測空間の第一推定値`zf`1次元配列で与える。観測`yo`とその誤差分散`r`はスカラ、予報共分散に対する局所化及びインフレーションを1次元配列で与える。

## 風速観測

第一推定値の周り分布するアンサンブルから単一の観測を`run_wind_ens`で同化する。結果はRスクリプト`plot_wind.R`で描画できる。

- `run_wind_ens.f90`: 単一の観測データをアンサンブルカルマンフィルタで同化する。ネームリスト`wind.nml`からパラメタを読み、第一推定値`zf`と解析値`za`をそれぞれ`zf.dat`、`za.dat`に保存する。Rでの描画に必要なパラメタを`confplot_wind.R`に保存する。
    * `calc_speed`: 東西風と南北風から風速を計算する非線型観測演算子。
- `wind.nml`: 乱数の種`seed`、アンサンブル数`ne`、予報誤差標準偏差`zf`、東西及び南北風の第一推定値`uf, vf、`観測`yo`、観測誤差標準偏差`so`、同化アルゴリズム`eakf`または`enkf`を`fil`に設定する。

## Lorenz-63 モデル

初期の設定では @Huang-Yang:1996 に倣って、無次元時間$t=2$を時間刻み幅$\Delta t=0.01$で200ステップかけて積分する。観測間隔は60ステップに1回で、60、120、180ステップ目で行う。

- `l63_module.f90`: @Lorenz:1963 モデル`l63_nl`、接線型`l63_tl`、接線型`l63_ad`及びテストサブルーチン`l63_test`が含まれる。RK4のインターフェースに合わせた時刻`t`は利用されない。予報3変数及び3つのパラメタは、それぞれ`w`と1次元配列`opts`に入れて渡す。
- `run_l63_ens.f90`: ネームリスト`l63.nml`のパラメタに基づき、アンサンブルカルマンフィルタで同化する。初期アンサンブル摂動と観測は正規乱数で生成する。真値`xt`、観測`yo`、アンサンブル平均`xm`を`l63_`フィルタ名`.dat`に格納する。Rでの描画に必要なパラメタを`confplot_l63_ens.R`に格納する。
- `run_l63_var.f90`: ネームリスト`l63.nml`のパラメタに基づき、4次元変分法同化を行う。上述の時間を単一のウインドウとして初期値の推定を行う。背景誤差共分散は単位行列である。最急降下法で最適化する。真値`xt`、観測`yo`、最後の予報`xb`を`l63_var.dat`に格納する。Rでの描画に必要なパラメタを`confplot_l63_var.R`に格納する。
- `l63.nml`: `&l63`の`p, r, b`はLorenz-63モデルのパラメタ、`dt`は時間刻み幅、`&var`の`bgd_b`は背景誤差分散、`ni, a`はそれぞれ最適化の反復回数及びステップ幅、`&ens`の`model_q`は第一推定値の初期分散、`ne`はアンサンブル数、`fil`は同化アルゴリズム`eakf`または`enkf`。
- `plot_l63_ens.R`: `l63_`フィルタ名`.dat`からデータを、`confplot_l63_ens.R`からパラメタを読み込み、真値、アンサンブル平均を曲線で、観測をマーカで描画し`l63_`フィルタ名`.png`に保存する。
- `plot_l63_var.R`: `l63_var.dat`からデータを、`confplot_l63_var.R`からパラメタを読み込み、真値、アンサンブル平均を曲線で、観測をマーカで描画し`l63_var.png`に保存する。
    * `calc_cost`: 第一推定値からの偏差、背景誤差分散、イノベーション、観測誤差分散を与えてコスト函数を計算する。

## Lorenz-96モデル

アンサンブルカルマンフィルタと4次元変分法で共通して用いるテータを`prep_l96`で生成する。その後`run_l96_ens`または、`run_l96_var`を実行しデータ同化を行う。既定では、観測は40点全てに毎時刻ある。結果はRスクリプトで描画できる。

- `l96_module.f90`: Lorenz-96モデル[@Lorenz-Emanuel:1998]`l96_nl`及びその接線型`l96_tl`、随伴`l96_ad`並びにテストサブルーチン`l96_test`が含まれる。
- `prep_l96.f90`: `l96.nml`からパラメタを取得し、真値、第一推定値のスピンアップを行うとともに、真値から観測を生成しファイルに保存する。
- `run_l96_ens.f90`: `prep_l96`が生成したファイルからデータを読み、`l96.nml`からパラメタを取得し、アンサンブルカルマンフィルタによりデータ同化を行う。`l96_`フィルタ名`.dat`に誤差と標準偏差を格納する。Rでの描画に必要なパラメタを`confplot_l96_ens.R`に格納する。
    * `calc_error`:アンサンブルと真値を与えて、アンサンブル平均の誤差`e1`、アンサンブルメンバの誤差の平均`e2`、比`e1/e2`、比の期待値、期待値で規格化した比を計算する。[@Anderson:2001;@Whitaker-Hamill:2002]
    * `calc_sd`: アンサンブルを与えて標準偏差の状態平均を計算する。
- `run_l96_var.f90`: `prep_l96`が生成したファイルからデータを読み、`l96.nml`からパラメタを取得し、4次元変分法によりデータ同化を行う。`l96_var.dat`に誤差を格納する。Rでの描画に必要なパラメタを`confplot_l96_var.R`に格納する。
- `l96.nml`: `&l96`の`ns`は状態の数、`dt`は時間刻み幅、`F`は強制　の大きさ、`nt_spinup`はスピンアップのステップ数、`nt`は同化のステップ数、`r`は観測誤差分散。`&var`の`b`は背景誤差分散、`nw`はウインドウのステップ数、`ni`は最適化の最大反復回数、`a`はステップ幅、`gb`は勾配ノルムの閾値。`&ens`の`ne`はアンサンブル数、`fil`は`enkf`または`eakf`、`c_loc`は局所化係数が$e^{-1/2}$となる格子数。`&io`の`xt_fname, yo_fname, xf_fname`は真値、観測、アンサンブルのファイル名。
- `plot_l96_ens.R`: `l96_`フィルタ名`.dat`からデータを、`confplot_l96_ens.R`からパラメタを読み込み、アンサンブル平均の誤差及び標準偏差、アンサンブルの誤差の平均、観測誤差を描き、`l96_`フィルタ名`.png`に保存する。
- `plot_l96_var.R`: `l96_var.dat`からデータを、`confplot_l96_var.R`からパラメタを読み込み、解析誤差と観測誤差を描画し`l63_var.png`に保存する。
    * `calc_cost`: 第一推定値からの偏差、背景誤差分散、イノベーション、観測誤差分散を与えてコスト函数を計算する。